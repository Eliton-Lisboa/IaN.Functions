/*
    @preserve JS.Functions v2.5
    @license Copyright 2021 Eliton Lisboa
    @license MIT Licensed (https://github.com/Eliton-Lisboa/JS.Functions/blob/main/LICENSE)
*/
"use strict";const Data={},Visual={};var $0="";const _DEBUG={alphabet:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],names:["João","Pedro","Victor","Maria","Eliton","Andrielly","Eduardo","Eduarda","Joaquin","Marcos","Stefane","Jeazon","Andréa"],keys:"adbecfdgehfigjhkiljmknlompnqorpsqtrusvtwuxvywzxaybzcADBECFDGEHFIGJHKILJMKNLOMPNQORPSQTRUSVTWUXVYWZXAYBZC",object:{image:"./jpg image.png",title:"My new book",subtitle:"nerd adventures",tags:["adventure","terror","arcade","action"],writer:"I",views:15500},function:()=>"Hello, World!",html:"<div> <p> Hello, World! </p> </div>"},_INFOS={out:e=>{let t="";return t=Array.isArray(e)&&1==e.length?e[0]:e,$0=t,_INFOS.historic.functions.push(t),t},add:_$add=>{const add={arrays:{func:arrays,implements:"Array"},strings:{func:strings,implements:"String"},data:{func:data,implements:"Data"},visual:{func:visual,implements:"Visual"}};_$add?Array.isArray(_$add)||(_$add=[_$add]):_$add=Object.keys(add);for(let x=0;x<_$add.length;x++)for(let y=0;y<Object.keys(add[_$add[x]].func).length;y++)eval(`${add[_$add[x]].implements}.${Object.keys(add[_$add[x]].func)[y]} = ${_$add[x]}.${Object.keys(add[_$add[x]].func)[y]}`);try{get("body").innerHTML+="<style>.d-none { display: none; }</style>"}catch(e){}},historic:{get:[],framePanels:[],functions:[]}},arrays={removeValues:(e,t)=>{let r=[];for(let s=0;s<e.length;s++)arrays.verifyValues(t,e[s])||r.push(e[s]);return $0=r,r},removePositions:(e,t)=>{let r=[];Array.isArray(t)||(t=[t]);for(let s=0;s<e.length;s++)arrays.verifyValues(t,s)||r.push(e[s]);return $0=r,r},removeValuesEquivalence:(e,t)=>{let r=[],s=!1;e=arrays.addEquivalence(e),Array.isArray(t)||(t=[t]);for(let t=0;t<e.length;t++)r.push([]);for(let l=0;l<e[0].length;l++){s=!1;for(let r=0;r<e.length;r++)for(let a=0;a<t.length;a++)arrays.verifyValues(t,e[r][l])||(s=!0);if(s)for(let t=0;t<e.length;t++)r[t].push(e[t][l])}return $0=r,r},verifyValues:(e,t)=>{let r=[],s=!1;Array.isArray(t)||(t=[t]);for(let l=0;l<t.length;l++){s=!1;for(let r=0;r<e.length;r++)e[r]===t[l]&&(s=!0);s?r.push(!0):r.push(!1)}return _INFOS.out(r)},valuesPosition:(e,t)=>{let r=[],s=!1;Array.isArray(t)||(t=[t]);for(let l=0;l<t.length;l++){r.push([]);for(let a=0;a<e.length;a++)s=!1,e[a]===t[l]&&(s=!0),s&&r[l].push(a)}return _INFOS.out(r)},addEquivalence:(e,t)=>{let r=e;const s=arrays.check.larger(e);for(let l=0;l<e.length;l++)if(l!==s){const a=e[s].length-e[l].length;for(let e=0;e<a;e++)r[l].push(t)}return $0=r,r},check:{larger:e=>{let t=0;for(let r=0;r<e.length;r++)e[r].length>e[t].length&&(t=r);return $0=t,t},small:e=>{let t=0;for(let r=0;r<e.length;r++)e[r].length<e[t].length&&(t=r);return $0=t,t}},changeValues:(e,t,r)=>{let s=[];Array.isArray(t)||(t=[t]),Array.isArray(r)||(r=[r]);for(let l=0;l<e.length;l++)arrays.verifyValues(t,e[l])?s.push(r[arrays.valuesPosition(t,e[l])]):s.push(e[l]);return $0=s,s},sumValues:(e,t)=>{let r=[];Array.isArray(t)||(t=[t]),r=arrays.addEquivalence([t,r],-1)[1];for(let s=0;s<e.length;s++)for(let l=0;l<t.length;l++)e[s]===t[l]&&r[l]++;return _INFOS.out(r)}},strings={valuesPosition:(e,t)=>{let r=[];Array.isArray(t)||(t=[t]),r=arrays.addEquivalence([t,r],[])[1];for(let s=0;s<t.length;s++)for(let l=0;l<e.length;l++)e.substring(l,l+t[s].length)===t[s]&&(r[s]=l);for(let e=0;e<r.length;e++)Array.isArray(r[e])&&(r[e]=-1);return _INFOS.out(r)},verifyValues:(e,t)=>{let r=strings.valuesPosition(e,t);for(let e=0;e<r.length;e++)-1==r[e]?r[e]=!1:r[e]=!0;return _INFOS.out(r)}},data={cryptography:(e,t=_DEBUG.keys,r=!0)=>{let s="";let l="",a="",o=[1,0];r&&(o=[0,1]);for(let e=o[0];e<t.length;e+=2)l+=t.substring(e,e+1);for(let e=o[1];e<t.length;e+=2)a+=t.substring(e,e+1);for(let t=0;t<e.length;t++)arrays.verifyValues(l,e.substring(t,t+1))?s+=a[arrays.valuesPosition(l,e.substring(t,t+1))]:s+=e.substring(t,t+1);return{result:_INFOS.out(s),morse:()=>{s="";const t=[{letter:"a",morse:".-"},{letter:"b",morse:"-..."},{letter:"c",morse:"-.-."},{letter:"d",morse:"-.."},{letter:"e",morse:"."},{letter:"f",morse:"..-."},{letter:"g",morse:"--."},{letter:"h",morse:"...."},{letter:"i",morse:".."},{letter:"j",morse:".---"},{letter:"k",morse:"-.-"},{letter:"l",morse:".-.."},{letter:"m",morse:"--"},{letter:"n",morse:"-."},{letter:"o",morse:"---"},{letter:"p",morse:".--."},{letter:"q",morse:"--.-"},{letter:"r",morse:".-."},{letter:"s",morse:"..."},{letter:"t",morse:"-"},{letter:"u",morse:"..-"},{letter:"v",morse:"...-"},{letter:"w",morse:".--"},{letter:"x",morse:"-..-"},{letter:"y",morse:"-.--"},{letter:"z",morse:"--.."},{letter:"0",morse:"-----"},{letter:"1",morse:".----"},{letter:"2",morse:"..---"},{letter:"3",morse:"...--"},{letter:"4",morse:"....-"},{letter:"5",morse:"....."},{letter:"6",morse:"-...."},{letter:"7",morse:"--..."},{letter:"8",morse:"---.."},{letter:"9",morse:"----."},{letter:".",morse:".-.-.-"},{letter:",",morse:"--..--"},{letter:"?",morse:"..--.."},{letter:"!",morse:"-.-.--"},{letter:"/",morse:"-..-."},{letter:"(",morse:"-.--."},{letter:")",morse:"-.--.-"},{letter:":",morse:"---..."},{letter:";",morse:"-.-.-."},{letter:"=",morse:"-...-"},{letter:"+",morse:".-.-."},{letter:"-",morse:"-....-"},{letter:"$",morse:"...-..-"},{letter:"@",morse:".--.-."},{letter:"Ø",morse:"---."},{letter:"&",morse:".-..."},{letter:" ",morse:"......."}];if(r)for(let r=0;r<e.split("").length;r++){let l=e.split("")[r];for(let s=0;s<t.length;s++)t[s].letter==e.split("")[r].toLowerCase()&&(l=t[s].morse);s+=l+" "}else for(let r=0;r<e.split(" ").length;r++){let l=e.split(" ")[r];for(let s=0;s<t.length;s++)t[s].morse==e.split(" ")[r].toLowerCase()&&(l=t[s].letter);s+=l+""}return _INFOS.out(s.trim())},ascii:()=>{if(s=[],r)for(let t=0;t<e.length;t++)s.push(e.substring(t,t+1).charCodeAt(0));else for(let t=0;t<e.length;t++)s.push(String.fromCharCode(e[t]));return _INFOS.out(s)},roman:()=>{if(s="",r){let t=String(+e).split("");const r=["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM","","X","XX","XXX","XL","L","LX","LXX","LXXX","XC","","I","II","III","IV","V","VI","VII","VIII","IX"];for(let e=2;e>=0;e--)s=(r[+t.pop()+10*e]||"")+s;s=Array(+t.join("")+1).join("M")+s}else s=0,e.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g,e=>{s+={M:1e3,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1}[e]});return _INFOS.out(s)}}},validation:(e,t)=>{let r=!1;return"phone"==e&&(r=/(?:\+?55\s?)?(?:\(?\d{2}\)?[\s-]?)?\d{4,5}[-\s]?\d{4}/g.test(t),t.length<8&&(r=!1)),_INFOS.out(r)},createDB:()=>{const e={},t={};return{createTable:function(r){e[r]=[],t[r]={addRow:t=>{e[r].push(t)},getRow:t=>e[r][t],updateRow:(t,s)=>{Object.assign(e[r][t],s)},rows:()=>e[r]},_INFOS.out(r)},dropTable:function(r){delete e[r],delete t[r]},tables:t}}},visual={createElements:()=>{let e="";const t=t=>{e=t||$0};return{on:t,create:(r,s)=>{const l=document.createElement(r);Object.keys(s).forEach(e=>{l[e]=s[e]});try{l.addEventListener(s.listen.event,s.listen.fun)}catch(e){}e.appendChild(l),$0=s.id||s.className||s.name||l;return{on:()=>{t(l)}}}}},framePanels:e=>{const t=e,r={now:0,hideClass:"d-none"},s=e=>{Object.assign(r,e);const s=e=>{e.forEach(e=>{Array.isArray(e)?s(e):e.classList.add(r.hideClass)})};s(t),t[r.now].classList.remove(r.hideClass)};return s(r),{next:e=>{if(r.now==t.length-1)throw"The index selected is greater than the number of panels";const s=_INFOS.historic.framePanels;Array.isArray(t[r.now])?t[r.now][s[s.length-1]].classList.add(r.hideClass):t[r.now].classList.add(r.hideClass),Array.isArray(t[r.now+1])?(t[r.now+1][e].classList.remove(r.hideClass),_INFOS.historic.framePanels.push(e)):(t[r.now+1].classList.remove(r.hideClass),_INFOS.historic.framePanels.push(r.now+1)),r.now++},back:()=>{if(0==r.now)throw"The selected index is less than the number of panels";const e=_INFOS.historic.framePanels;Array.isArray(t[r.now])?t[r.now][e[e.length-1]].classList.add(r.hideClass):t[r.now].classList.add(r.hideClass),Array.isArray(t[r.now-1])?t[r.now-1][e[e.length-2]].classList.remove(r.hideClass):t[r.now-1].classList.remove(r.hideClass),_INFOS.historic.framePanels.pop(),r.now--},setInfos:s}}},get=e=>{try{const t=document.querySelectorAll(e),r=[];for(let e=0;e<t.length;e++)r.push(t[e]);return _INFOS.historic.get.push(_INFOS.out(r)),_INFOS.out(r)}catch(e){}};try{module.exports={Data:Data,Visual:Visual,_DEBUG:_DEBUG,_INFOS:_INFOS,arrays:arrays,strings:strings,data:data}}catch(e){}